myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#CC6666", "#9999CC"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("483D8B", "#9999CC"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#9999CC"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#DC143C"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#CC6666", "#DC143C"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#9999CC", "#DC143C"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#9999CC", "#483D8B"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#9999CC", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw()
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
theme(legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = "Causal Model",
legend.position = c(0.8, 0.2))
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
theme(legend.position = c(0.8, 0.2))
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
theme(legend.position = c(0.8, 0.2)) +
theme(legend.title = "Causal Model")
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(colour="blue", size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
guides(fill=guide_legend(title="New Legend Title")) +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
labs(fill='NEW LEGEND TITLE')  +
#guides(fill=guide_legend(title="New Legend Title")) +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, fill=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
labs(fill='NEW LEGEND TITLE')  +
#guides(fill=guide_legend(title="New Legend Title")) +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
labs(fill='NEW LEGEND TITLE')  +
#guides(fill=guide_legend(title="New Legend Title")) +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, fill=Causal_model)) +
geom_line(size = 1) +
#scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
#labs(fill='NEW LEGEND TITLE')  +
scale_fill_manual("My title",values=c("orange","red"))
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, fill=Causal_model)) +
geom_line(size = 1) +
#scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
#labs(fill='NEW LEGEND TITLE')  +
scale_fill_manual("My title",values=c("orange","red"))
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, fill=Causal_model)) +
geom_line(size = 1) +
#scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
#labs(fill='NEW LEGEND TITLE')  +
scale_fill_manual("My title",values=c("orange","red") +
#guides(fill=guide_legend(title="New Legend Title")) +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
#-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----#
#-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----#
#-----||-----|| Episode 2: Count the proportion of SLT p-values that are    ||-----||-----#
#-----||-----||  statistically significant (i.e. p-value below 0.05).       ||-----||-----#
#-----||-----||  Do this for both phenotypes across all different beta      ||-----||-----#
#-----||-----||  values.                                                    ||-----||-----#
#-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----#
#-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----||-----#
#Phenotype 1 Results:
#First, read in the data...
P1_pvalues = read.table("Aggregate_Pheno1Results.txt")
#Remove NA values...
P1_pvalues = P1_pvalues[complete.cases(P1_pvalues),]
nrow(P1_pvalues)
#Create matrix that checks for each element if the p-value is statisticcally significant.
P1_pvalues_which_significant = (P1_pvalues[,-c(1,2)] < 0.05)
rownames(P1_pvalues_which_significant) = row_name
colnames(P1_pvalues_which_significant) = mynames
P1_success = colSums(P1_pvalues_which_significant)/n
names(P1_success) = mynames
P1_success
#Phenotype 2 Results:
#First, read in the data...
P2_pvalues = read.table("Aggregate_Pheno2Results.txt")
#Remove NA values...
P2_pvalues = P2_pvalues[complete.cases(P2_pvalues),]
nrow(P1_pvalues)
#Create matrix that checks for each element if the p-value is statisticcally significant.
P1_pvalues_which_significant = (P1_pvalues[,-c(1,2)] < 0.05)
rownames(P1_pvalues_which_significant) = row_name
colnames(P1_pvalues_which_significant) = mynames
P1_success = colSums(P1_pvalues_which_significant)/n
names(P1_success) = mynames
P1_success
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, fill=Causal_model)) +
geom_line(size = 1) +
#scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
#labs(fill='NEW LEGEND TITLE')  +
scale_fill_manual("My title",values=c("orange","red")) +
#guides(fill=guide_legend(title="New Legend Title")) +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, fill=Causal_model)) +
geom_line(size = 1) +
#scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
myplot1 = ggplot(data = Melted_myresults_part1,
aes(x = Beta, y = True_detection_rate, col=Causal_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Proportion of true causal detection",
title = "Comparison of Single Locus Test true causal variant detection",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot1
P1_pvalues = read.table("Aggregate_Pheno1Results.txt")
P1_pvalues = P1_pvalues[complete.cases(P1_pvalues),]
nrow(P1_pvalues)
P1_pvalues_which_significant = (P1_pvalues[,-c(1,2)] < 0.05)
rownames(P1_pvalues_which_significant) = row_name
colnames(P1_pvalues_which_significant) = mynames
P1_success = colSums(P1_pvalues_which_significant)/n
names(P1_success) = mynames
P1_success
P2_pvalues = read.table("Aggregate_Pheno2Results.txt")
P2_pvalues = P2_pvalues[complete.cases(P2_pvalues),]
nrow(P1_pvalues)
P1_pvalues_which_significant = (P1_pvalues[,-c(1,2)] < 0.05)
rownames(P1_pvalues_which_significant) = row_name
colnames(P1_pvalues_which_significant) = mynames
P1_success = colSums(P1_pvalues_which_significant)/n
names(P1_success) = mynames
P1_success
myresults_part2 = cbind(Beta, P1_success, P2_success)
P1_pvalues = read.table("Aggregate_Pheno1Results.txt")
P1_pvalues = P1_pvalues[complete.cases(P1_pvalues),]
nrow(P1_pvalues)
P1_pvalues_which_significant = (P1_pvalues[,-c(1,2)] < 0.05)
rownames(P1_pvalues_which_significant) = row_name
colnames(P1_pvalues_which_significant) = mynames
P1_success = colSums(P1_pvalues_which_significant)/n
names(P1_success) = mynames
P1_success
P2_pvalues = read.table("Aggregate_Pheno2Results.txt")
P2_pvalues = P2_pvalues[complete.cases(P2_pvalues),]
nrow(P2_pvalues)
P2_pvalues_which_significant = (P2_pvalues[,-c(1,2)] < 0.05)
rownames(P2_pvalues_which_significant) = row_name
colnames(P2_pvalues_which_significant) = mynames
P2_success = colSums(P2_pvalues_which_significant)/n
names(P2_success) = mynames
P2_success
myresults_part2 = cbind(Beta, P1_success, P2_success)
Melted_myresults_part2 = melt(myresults_part2, id.var='Beta')
View(Melted_myresults_part2)
colnames(Melted_myresults_part1) = c("Beta","Phenotype_model", "Sensitivity" )
Melted_myresults_part1 = Melted_myresults_part1[-c(1:16),]
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col=Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot2
colnames(Melted_myresults_part1) = c("Beta","Phenotype_model", "Sensitivity" )
Melted_myresults_part1 = Melted_myresults_part1[-c(1:16),]
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col=Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot2
Melted_myresults_part2 = melt(myresults_part2, id.var='Beta')
colnames(Melted_myresults_part1) = c("Beta","Phenotype_model", "Sensitivity" )
Melted_myresults_part2 = Melted_myresults_part2[-c(1:16),]
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col=Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot2
Melted_myresults_part2 = melt(myresults_part2, id.var='Beta')
colnames(Melted_myresults_part2) = c("Beta","Phenotype_model", "Sensitivity" )
Melted_myresults_part2 = Melted_myresults_part2[-c(1:16),]
library(ggplot2)
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col=Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot2
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col= Melted_myresults_part2$Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot2
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col= Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.8, 0.2))
myplot2
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col= Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.9, 0.1))
myplot2
myplot2 = ggplot(data = Melted_myresults_part2,
aes(x = Beta, y = Sensitivity, col= Phenotype_model)) +
geom_line(size = 1) +
scale_color_manual(values=c("#483D8B", "#F08080"))+
labs(x= "Beta",
y = "Sensitivity",
title = "Comparison of Sensitivities of the Single Locus Test under varying phenotype-genotype association strengths",
caption = "Peter Tea")+
theme_bw() +
theme(legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.position = c(0.82, 0.18))
myplot2
