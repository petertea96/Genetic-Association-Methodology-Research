liat.files()
list.files()
table_name = "NoRecomb_PhenoAndGeno6.txt"
data = read.table(table_name)
View(table_name)
table_name
View(data)
54-33
rep(paste("pval", 1:16))
rep(paste("pval", 1:32))
Phenotype1_Results_SLT = data.frame(Rep. = integer(), Method = character(),Pval = numeric(), stringsAsFactors = FALSE )
Phenotype1_Results_SLT
Phenotype1_Results_SLT[1,4] = 12
Phenotype1_Results_SLT
Phenotype1_Results_SLT = data.frame(Rep. = integer(), Method = character(), stringsAsFactors = FALSE )
data
G=data[,33:ncol(data)]
G
K=ncol(data)-32
K
for(h in 1:16){
P1 = data[,h]
p.val.pheno1.SLT = get.min.pval(data=data[,31:ncol(data)], phenotype=P1)
Phenotype1_Results_SLT[index,2+h]=   p.val.pheno1.SLT[[1]]
}
get.min.pval = function(data, phenotype){
#Function computes all association tests for all SNP sites, and then outputs
#the maximum of these association tests.
number.sites = ncol(data) - 2 #Compute the number of SNP sites in the data
Pval.list = numeric(number.sites) #Initialize list of p-values
for(i in 1:number.sites){
x = as.factor(data[,i+2])
p.val = anova(lm(phenotype~x))[1,5] #Extract p-value.
Pval.list[i] = p.val
}
which_SNP = which(Pval.list==min(Pval.list))
corrected_pvalue = number.sites*min(Pval.list)
myresult = list(corrected_pvalue, which_SNP, Pval.list)
return(myresult) #Return correction factor
}
for(h in 1:16){
P1 = data[,h]
p.val.pheno1.SLT = get.min.pval(data=data[,31:ncol(data)], phenotype=P1)
Phenotype1_Results_SLT[index,2+h]=   p.val.pheno1.SLT[[1]]
}
index=1
for(h in 1:16){
P1 = data[,h]
p.val.pheno1.SLT = get.min.pval(data=data[,31:ncol(data)], phenotype=P1)
Phenotype1_Results_SLT[index,2+h]=   p.val.pheno1.SLT[[1]]
}
Phenotype1_Results_SLT
data[,1]
data[,31:ncol(data)]
Phenotype1_Results_SLT = data.frame(Rep. = integer(), Method = character(), stringsAsFactors = FALSE )
data = read.table(table_name)
G=data[,33:ncol(data)]
K=ncol(data)-32
nidex
index
for(h in 1:16){
P1 = data[,h]
p.val.pheno1.SLT = get.min.pval(data=data[,31:ncol(data)], phenotype=P1)
Phenotype1_Results_SLT[index,2+h]=   p.val.pheno1.SLT[[1]]
}
Phenotype1_Results_SLT
data[,6]
a=data[,6]
K
number.sites=K
Pval.list = numeric(number.sites) #Initialize list of p-values
data=data[,31:ncol(data)]
a
phenotype=a
for(i in 1:number.sites){
x = as.factor(data[,i+2])
p.val = anova(lm(phenotype~x))[1,5] #Extract p-value.
Pval.list[i] = p.val
}
which_SNP = which(Pval.list==min(Pval.list))
corrected_pvalue = number.sites*min(Pval.list)
Pval.list
corrected_pvalue
Phenotype1_Results_SLT = data.frame(Rep. = integer(), Method = character(), stringsAsFactors = FALSE )
data = read.table(table_name)
G=data[,33:ncol(data)]
K=ncol(data)-32
for(h in 1:16){
P1 = data[,h]
p.val.pheno1.SLT = get.min.pval(data=data[,31:ncol(data)], phenotype=P1)
Phenotype1_Results_SLT[index,2+h]=   p.val.pheno1.SLT[[1]]
}
Phenotype1_Results_SLT
a=data[,4]
a
data[,31:ncol(data)]
data=data[,31:ncol(data)]
phenotype=a
number.sites = ncol(data) - 2 #Compute the number of SNP sites in the data
Pval.list = numeric(number.sites) #Initialize list of p-values
for(i in 1:number.sites){
x = as.factor(data[,i+2])
p.val = anova(lm(phenotype~x))[1,5] #Extract p-value.
Pval.list[i] = p.val
}
which_SNP = which(Pval.list==min(Pval.list))
corrected_pvalue = number.sites*min(Pval.list)
Pval.list
which_SNP
m=matrix(0, ncol=32)
m
m[2,2] =3
m=data.frame()
m
m[1,5] = 4
m
?data.frame
m=data.frame(1:32)
m
data.frame(matrix(ncol = 5, nrow = 1))
gg=data.frame(matrix(ncol = 5, nrow = 1))
gg[2,1]=2
gg
gg[4,5]=0
gg
gg[1,6]=5
gg
getwd()
list.files()
actual_common_causal = read.table("common_causal_vector_5.txt")
actual_common_causal
abc = read.table("common_causal_vector_7.txt")
abc
is.matrix(abc)
is.vector(abc)
abc
rbind(actual_common_causal,abc)
a=vector()
a=rbind(a, actual_common_causal)
a
list.files()
list.files()
j=1
Actual_rare_causal_name = paste("Actual_rare_causal_table_", j, ".txt", sep="")
data2 = read.table(Actual_rare_causal_name)
j=2
Actual_rare_causal_name = paste("Actual_rare_causal_table_", j, ".txt", sep="")
data3 = read.table(Actual_rare_causal_name)
a=rbind(data2,data3)
View(a)
data2
data3
list.files()
j=1
Chosen_common_causal_name = paste("Chosen_common_causal_", j, ".txt", sep="")
data3 = read.table(Chosen_common_causal_name)
data3
length(data3)
624/16
seq(1, 624, by=16)
seq(0, 624, by=16)
seq(1, 625, by=16)
data3[1:16]
data3[17:32]
data3
index=seq(1, length(data3) + 1, by=16)
index
Chosen_common_causal=vector()
for (i in 1:length(index)){
first=index[i]
last=index[i+1]-1
Chosen_common_causal = rbind(Chosen_common_causal,data3[first:last])
}
Chosen_common_causal=matrix()
for (i in 1:length(index)){
first=index[i]
last=index[i+1]-1
Chosen_common_causal = rbind(Chosen_common_causal,data3[first:last])
}
Chosen_common_causal=matrix(ncol=16)
for (i in 1:length(index)){
first=index[i]
last=index[i+1]-1
Chosen_common_causal = rbind(Chosen_common_causal,data3[first:last])
}
first=index[i]
last=index[i+1]-1
data3[first:last]
Chosen_common_causal=matrix(ncol=16)
data3 = read.table(Chosen_common_causal_name)
index=seq(1, length(data3) + 1, by=16)
for (i in 1:length(index)){
first=index[i]
last=index[i+1]-1
row_to_add = unname(data3[first:last])
Chosen_common_causal = rbind(Chosen_common_causal, row_to_add)
}
Chosen_common_causal
row_to_add
data3[first:last]
first
last
Chosen_common_causal=matrix(ncol=16)
Chosen_common_causal_name = paste("Chosen_common_causal_", j, ".txt", sep="")
data3 = unname(read.table(Chosen_common_causal_name))
index=seq(1, length(data3) + 1, by=16)
data3
for (i in 1:length(index)){
first=index[i]
last=index[i+1]-1
row_to_add = unname(data3[first:last])
Chosen_common_causal = rbind(Chosen_common_causal, row_to_add)
}
Chosen_common_causal=vector()
index=seq(1, length(data3) + 1, by=16)
for (i in 1:length(index)){
first=index[i]
last=index[i+1]-1
row_to_add = unname(data3[first:last])
Chosen_common_causal = rbind(Chosen_common_causal, row_to_add)
}
Chosen_common_causal
Chosen_common_causal=vector()
Chosen_common_causal_name = paste("Chosen_common_causal_", j, ".txt", sep="")
data3 = unname(read.table(Chosen_common_causal_name))
index=seq(1, length(data3) + 1, by=16)
index
for (i in 1:length(index)){
first=index[i]
last=index[i+1]-1
row_to_add = data3[first:last]
Chosen_common_causal = rbind(Chosen_common_causal, row_to_add)
}
Chosen_common_causal
row_to_add
Chosen_common_causal=vector()
Chosen_common_causal_name = paste("Chosen_common_causal_", j, ".txt", sep="")
j=1
Chosen_common_causal_name = paste("Chosen_common_causal_", j, ".txt", sep="")
data3 = unname(read.table(Chosen_common_causal_name))
index=seq(1, length(data3) + 1, by=16)
data3
data3[1:16]
length(data3)
data3[1]
data3[1,]
data3[,1]
is.matrix(data3)
is.vector(data3)
typeof(data())
typeof(data3
)
data3[[1]]
data3[[1]][1]
data3[[1]][2]
Chosen_common_causal=vector()
data3 = read.table(Chosen_common_causal_name)
data3
index=seq(1, length(data3) + 1, by=16)
index
i=1
first=index[i]
last=index[i+1]-1
first
last
row_to_add = data3[first:last]
row_to_add
data3 = as.vector(read.table(Chosen_common_causal_name))
index=seq(1, length(data3) + 1, by=16)
i=1
row_to_add = data3[first:last]
row_to_add
Chosen_common_causal=vector()
data3 = read.table(Chosen_common_causal_name)
unlist(data3)
df <- data.frame(matrix(unlist(data3), nrow=length(data3), byrow=T))
df
index=seq(1, length(data3) + 1, by=16)
df <- data.frame(matrix(unlist(data3), nrow=length(index), byrow=T))
index=seq(1, length(data3) + 1, by=16)
index
length(index)
length(data3)
length(data3)/16
df <- data.frame(matrix(unlist(data3), nrow=length(data3)/16, byrow=T))
df
df <- data.frame(matrix(unlist(data3), nrow=length(data3)/16, byrow=FALSE))
df
data3
read.line(Chosen_common_causal_name)
read.lines(Chosen_common_causal_name)
readLines(Chosen_common_causal_name)
data3 = read.table(Chosen_common_causal_name)
data3
data3[1]
?read.table
scan(Chosen_common_causal_name)
a=scan(Chosen_common_causal_name)
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
a[7]
a[8]
a[9]
length(a)
a
1248/16
df <- data.frame(matrix(data3), nrow=length(data3)/16, byrow=TRUE))
df <- data.frame(matrix(data3), nrow=length(data3)/16, byrow=TRUE)
df
data3
data3=scan(Chosen_common_causal_name)
data3
df <- data.frame(matrix(data3), nrow=length(data3)/16, byrow=TRUE)
df
df <- data.frame(data3, nrow=length(data3)/16, byrow=TRUE)
df
?data.frame
?as.data.frame
df <- as.data.frame(data3, nrow=length(data3)/16, byrow=TRUE)
df
df <- as.data.frame(data3, nrow=length(data3)/16, ncol=16, byrow=TRUE)
df
df <- as.matrix(data3, nrow=length(data3)/16, ncol=16, byrow=TRUE)
df
df <- matrix(data3, nrow=length(data3)/16, ncol=16, byrow=TRUE)
df
