data(spam)
library(kernlab)
data(spam)
sub_data = spam[,c(32,34)]
principal_compponents = prcomp(sub_data)
principal_compponents
head(sub_data)
plot(principal_compponents$x[,1], principal_compponents$x[,2], xlab = "PC1", ylab = "PC2")
principal_compponents$rotation
setwd("C:/Users/Peter/Documents/Uottawa/2018 - 2019 Honour's project/Cluster files/Final codes/Genetic-Association-Methodology-Research")
list.files()
Kernel_P1_Results = read.table("Aggregate_Pheno1Results.txt")
head(Kernel_P1_Results)
?read.table
Kernel_P1_Results = read.table("Aggregate_Pheno1Results.txt", na.rm = TRUE)
Kernel_P1_Results = Kernel_P1_Results[complete.cases(Kernel_P1_Results),]
nrow(Kernel_P1_Results)
nrow(Kernel_P1_Results)/3
Kernel_P2_Results = read.table("Aggregate_Pheno2Results.txt")
SLT_P1_Results = read.table("Aggregate_Pheno1Results_SLT.txt")
SLT_P2_Results = read.table("Aggregate_Pheno2Results_SLT.txt")
Kernel_P2_Results = Kernel_P2_Results[complete.cases(Kernel_P2_Results),]
Kernel_P2_Results = Kernel_P2_Results[complete.cases(Kernel_P2_Results),]
SLT_P1_Results = SLT_P1_Results[complete.cases(SLT_P1_Results),]
SLT_P2_Results = SLT_P2_Results[complete.cases(SLT_P2_Results),]
nrow(SLT_P2_Results)
nrow(SLT_P1_Results)
nrow(Kernel_P2_Results)
nrow(Kernel_P1_Results)
1152*3
View(SLT_P1_Results)
View(Kernel_P1_Results)
3440/3
head(SLT_P1_Results)
SLT_P1_pvalues_which_significant = (SLT_P1_Results[,-c(1,2)] < 0.05)
colnames(Kernel_P1_Results)
head(Kernel_P1_Results)
column_names = c("Iteration", "Assoc. Stat." "S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
column_names = c("Iteration", "Assoc. Stat.", "S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
column_names = c("Iteration", "Assoc. Stat.", "S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
colnames(Kernel_P1_Results) = column_names; colnames(Kernel_P2_Results) = column_names
head(Kernel_P1_Results)
head(Kernel_P2_Results)
SLT_P1_Results[,2]
SLT_P1_Results[,1]
SLT_P1_Results[,1] == SLT_P2_Results[,1]
SLT_P1_pvalues_which_significant = (SLT_P1_Results[,-c(1,2)] < 0.05)
SLT_P1_pvalues_which_significant
length(SLT_P1_pvalues_which_significant)
nrow(SLT_P1_Results)
Sensitivity_SLT_P1 = sum (SLT_P1_pvalues_which_significant) / nrow(SLT_P1_Results)
Sensitivity_SLT_P1
SLT_P2_pvalues_which_significant = (SLT_P2_Results[,-c(1,2)] < 0.05)
Sensitivity_SLT_P2 = sum (SLT_P2_pvalues_which_significant) / nrow(SLT_P2_Results)
Sensitivity_SLT_P2
setwd("C:/Users/Peter/Documents/Uottawa/2018 - 2019 Honour's project/Cluster files/Final codes/Genetic-Association-Methodology-Research")
Kernel_P1_Results = read.table("Aggregate_Pheno1Results.txt")
Kernel_P2_Results = read.table("Aggregate_Pheno2Results.txt")
View(SLT_P1_Results)
View(SLT_P2_Results)
library(dplyr)
head(Kernel_P1_Results)
column_names = c("Iteration", "Assoc. Stat.", "S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
colnames(Kernel_P1_Results) = column_names; colnames(Kernel_P2_Results) = column_names
head(Kernel_P1_Results)
P1_SKAT = filter(data, `Assoc. Stat.` == "SKAT")
P1_SKAT = filter(Kernel_P1_Results, `Assoc. Stat.` == "SKAT")
column_names = c("Iteration", "Assoc_Stat", "S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
colnames(Kernel_P1_Results) = column_names; colnames(Kernel_P2_Results) = column_names
P1_SKAT = filter(Kernel_P1_Results, Assoc_Stat == "SKAT")
View(P1_SKAT)
P1_SKAT = P1_SKAT[complete.cases(P1_SKAT),]
nrow(P1_SKAT)
head(Kernel_P1_Results)
Kernel_P1_Results = read.table("Aggregate_Pheno1Results.txt")
Kernel_P2_Results = read.table("Aggregate_Pheno2Results.txt")
SLT_P1_Results = read.table("Aggregate_Pheno1Results_SLT.txt")
SLT_P2_Results = read.table("Aggregate_Pheno2Results_SLT.txt")
column_names = c("Iteration", "Assoc_Stat", "S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
colnames(Kernel_P1_Results) = column_names; colnames(Kernel_P2_Results) = column_names
Kernel_P1_Results = Kernel_P1_Results[complete.cases(Kernel_P1_Results),]
Kernel_P2_Results = Kernel_P2_Results[complete.cases(Kernel_P2_Results),]
SLT_P1_Results = SLT_P1_Results[complete.cases(SLT_P1_Results),]
SLT_P2_Results = SLT_P2_Results[complete.cases(SLT_P2_Results),]
library(dplyr)
P1_SKAT = filter(Kernel_P1_Results, Assoc_Stat == "SKAT")
View(Kernel_P1_Results)
P1_MDMR = filter(Kernel_P1_Results, Assoc_Stat == "MDMR")
P1_GTSR = filter(Kernel_P1_Results, Assoc_Stat == "GTSR")
nrow(P1_SKAT);nrow(P1_MDMR); nrow(P1_GTSR)
a = P1_SKAT[,-c(1,2)] < 0.05
View(a)
View(P1_SKAT)
Kernel_Sensitivity = function(mydata){
#Create matrix that checks for each element if the p-value is statisticcally significant.
Pvalues_which_significant = (mydata[,-c(1,2)] < 0.05)
n = nrow(mydata)
Sensitivity = colSums(Pvalues_which_significant)/n
Kernel_names = c("S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
colnames(Sensitivity) = Kernel_names
return(Sensitivity)
}
Kernel_Sensitivity(P1_SKAT)
Kernel_Sensitivity = function(mydata){
#Create matrix that checks for each element if the p-value is statisticcally significant.
Pvalues_which_significant = (mydata[,-c(1,2)] < 0.05)
n = nrow(mydata)
Sensitivity = colSums(Pvalues_which_significant)/n
Kernel_names = c("S_IBS", "S_AM", "S_AS", "S_LIN", "S_REC", "S_QUAD", "S_012", "S_123", "S_124",
"S_h1", "skat.kernel","tree1", "tree2", "tree3", "tree4", "tree5")
names(Sensitivity) = Kernel_names
return(Sensitivity)
}
Kernel_Sensitivity(P1_SKAT)
P2_SKAT = filter(Kernel_P2_Results, Assoc_Stat == "SKAT")
P2_MDMR = filter(Kernel_P2_Results, Assoc_Stat == "MDMR")
P2_GTSR = filter(Kernel_P2_Results, Assoc_Stat == "GTSR")
nrow(P2_SKAT); nrow(P2_MDMR); nrow(P2_GTSR)
Kernel_Sensitivity(P2_SKAT)
Kernel_Sensitivity(P2_SKAT); Kernel_Sensitivity(P2_MDMR); Kernel_Sensitivity(P2_GTSR)
Kernel_Sensitivity(P2_SKAT);
Kernel_Sensitivity(P2_MDMR);
Kernel_Sensitivity(P2_GTSR)
